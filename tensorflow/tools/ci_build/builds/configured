#!/usr/bin/env bash
# Copyright 2015 The TensorFlow Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ==============================================================================

# This script is a wrapper to run any build inside the docker container
# when running ci_build.sh. It's purpose is to automate the call of ./configure.
# Yes, this script is a workaround of a workaround.
#
# Usage: configured <CONTAINER_TYPE> [--disable-gcp] <COMMAND>
#
# The optional flag --disable-gcp disabled support for Google Cloud Platform
# (GCP) in the builds.

set -e

CONTAINER_TYPE=$( echo "$1" | tr '[:upper:]' '[:lower:]' )
shift 1

COMMAND=("$@")

# we are explicitly setting the interpreter to python3 to see if it works
export CI_BUILD_PYTHON="${CI_BUILD_PYTHON:-python3}"
export PYTHON_BIN_PATH="${PYTHON_BIN_PATH:-$(which ${CI_BUILD_PYTHON})}"
# XLA currently does not build under Android, so disable it for now.
if [[ "${CONTAINER_TYPE}" == 'android' ]]; then
  export TF_ENABLE_XLA=0
fi

if [[ "${CONTAINER_TYPE}" == 'rocm' ]]; then
  export TF_NEED_CLANG=0
fi

# diagnostics
echo "CONTAINER_TYPE: ${CONTAINER_TYPE}"
echo "CI_BUILD_PYTHON: ${CI_BUILD_PYTHON}"
# the value of PYTHON_BIN_PATH has the corresponding interpreter(python3 or any)
# but the value is empty. since it is empty, the script cannot find and execute configure.py.
echo "PYTHON_BIN_PATH: ${PYTHON_BIN_PATH}" 
echo "ROCM_PATH: ${ROCM_PATH}"
echo "Current Directory: $(pwd)"
echo "Listing root directory:"
ls -la /

pushd "${CI_TENSORFLOW_SUBMODULE_PATH:-.}"
echo "Current Directory after pushd: $(pwd)"

# Check if PYTHON_BIN_PATH is set correctly
if [[ -z "${PYTHON_BIN_PATH}" ]]; then
  echo "Error: PYTHON_BIN_PATH is not set. Please ensure Python is installed and accessible."
  exit 1
fi

yes "" | $PYTHON_BIN_PATH configure.py
popd

# Gather and print build information
SCRIPT_DIR=$( cd ${0%/*} && pwd -P )
${SCRIPT_DIR}/print_build_info.sh ${CONTAINER_TYPE} ${COMMAND[@]}

# orginally based on the docker logs, the bazel build in the script was pointing to
# "build_pip_package". The "traget" which does is not existing. The one that is there
# in our script is "build_pip_package". By correcting this pointing, the build should
# run perfectly

bazel build --config=rocm //tensorflow/tools/pip_package:build_pip_package --verbose_failures

${COMMAND[@]}
